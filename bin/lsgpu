#!/usr/bin/env python

# This script runs $cmd on each of the $hosts in parallel and print output
# cmd=gpustat and hosts are all hostnames that begins with g

import subprocess
from concurrent.futures import ProcessPoolExecutor

cmd='/usr/local/anaconda3/bin/gpustat --force-color'

# run command on remote machine using ssh, return lines of output
def ssh_run(host):
    return subprocess.run(f"ssh {host} -T '{cmd}'",
        shell=True, text=True,
        stdout=subprocess.PIPE, stderr=subprocess.STDOUT,
    ).stdout

if __name__ == '__main__':
    # config* for config and config_local on my machine
    hosts = subprocess.getoutput(r"sed -rn 's/^\s*Host\s+(.*)\s*/\1/ip' ~/.ssh/config* | grep '^g'").split()
    with ProcessPoolExecutor(max_workers=len(hosts)) as pool:
        for data in pool.map(ssh_run, hosts):
            # print(f"Host {host}:")
            print(data, end='')
